{"version":3,"sources":["components/navbar.component.js","components/footer.component.js","constants/dates.js","components/course-popup.component.js","query.js","components/courses-list.component.js","components/edit-course.component.js","components/create-course.component.js","components/table.component.js","generateTimetable.js","components/timetable.component.js","App.js","actions/selectedCoursesSlice.js","app/store.js","index.js"],"names":["Navbar","className","to","Component","DAYOFWEEK","Row","props","scope","date","section","map","currentdate","Fragment","Constants","dayOfWeek","startTime","endTime","Popup","state","setShow","course","items","rowData","i","this","sections","dates","entries","value","push","handleClose","setState","Button","variant","onClick","Modal","show","size","onHide","backdrop","keyboard","Header","closeButton","Title","Body","courseInfo","Footer","GET_DISCIPLINE","gql","GET_COURSE","Course","name","code","description","CoursesList","updateSelectedDisciplines","selectedOptions","console","log","newSelectedDisciplines","forEach","currentcourse","selectedDisciplines","deleteCourse","bind","createDisciplineList","courses","disciplines","axios","get","then","response","data","catch","error","id","delete","filter","el","_id","list","length","key","link","options","disciplineList","isSearchable","isMulti","getSelectedDisciplines","placeholder","onChange","undefined","discipline","label","query","loading","dataList","queryDiscipline","queryCourse","courseList","EditExercise","onChangeUsername","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","username","duration","Date","users","match","params","user","e","target","preventDefault","exercise","post","res","window","location","ref","required","type","selected","TableData","day","rowStart","rowEnd","column","String","tableDataMainStyle","backgroundColor","color","fontSize","gridRowStart","gridRowEnd","gridColumn","Paper","elevation","style","courseName","getTimeSlot","num","isValidTime","input","a","Promise","resolve","reject","possible","times","Array","fill","x","k","j","getCourses2","start","getCourses","allTables","newSection","result","table","daysOfWeek","item","class","Timetable","updateSelect","selectedCourses","getSelectedCourses","generate","nextTime","prevTime","allTimes","currentPage","totalPage","courseNames","includes","coursename","columns","current","rows","time","tableData","all","index","promiseArray","arr","val3","courseIds","pop","generateTimetable","updateTimes","courseNameList","createSelectedCourses","showDayOfWeek","showTime","renderDates","App","path","exact","component","EditCourse","selectedCoursesSlice","createSlice","initialState","reducers","setCourses","action","payload","actions","configureStore","reducer","selectedCoursesReducer","cache","InMemoryCache","HttpLink","uri","client","ApolloClient","ReactDOM","render","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.95982d59.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Timetable Builder\n        </Link>\n        <div className=\"collpase navbar-collapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                Courses\n              </Link>\n            </li>\n            {/* \n            <li className=\"navbar-item\">\n              <Link to=\"/create\" className=\"nav-link\">\n                Add Course\n              </Link>\n            </li> \n            */}\n            <li className=\"navbar-item\">\n              <Link to=\"/timetable\" className=\"nav-link\">\n                Build Timetable\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"page-footer mt-4\">\r\n        <div className=\"footer-copyright text-center py-3\">\r\n          Made by Jason Tian, using Slash GraphQL\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","export const DAYOFWEEK = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\"\r\n];\r\n","import React, { Component } from \"react\";\r\nimport \"./popup.styles.css\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport * as Constants from \"../constants/dates\";\r\n\r\nfunction displayDates(dates) {\r\n  return dates.map(currentdate => {\r\n    return (\r\n      <React.Fragment>\r\n        {Constants.DAYOFWEEK[currentdate.dayOfWeek - 1]} {currentdate.startTime}\r\n        {\":00\"}\r\n        {\" - \"}\r\n        {currentdate.endTime}\r\n        {\":00\"}\r\n        <br></br>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n}\r\n\r\nconst Row = props => (\r\n  <tr>\r\n    <th scope=\"row\">Lecture {props.date[0].section}</th>\r\n    <td>{displayDates(props.date)}</td>\r\n    <td>-</td>\r\n    <td>---</td>\r\n  </tr>\r\n);\r\n\r\nclass Popup extends Component {\r\n  state = {\r\n    setShow: false,\r\n    course: this.props.course\r\n  };\r\n\r\n  courseInfo() {\r\n    // Loop through dates\r\n\r\n    let items = [];\r\n    let rowData = [];\r\n    for (let i = 1; i <= this.state.course.sections; i++) {\r\n      for (const [index, value] of this.state.course.dates.entries()) {\r\n        if (value.section === i) {\r\n          items.push(value);\r\n        }\r\n      }\r\n      // render times\r\n      rowData.push(<Row date={items}></Row>);\r\n      items = [];\r\n    }\r\n    return rowData;\r\n  }\r\n\r\n  render() {\r\n    const handleClose = () => this.setState({ setShow: false });\r\n    const handleShow = () => this.setState({ setShow: true });\r\n    return (\r\n      <React.Fragment>\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n          Details\r\n        </Button>\r\n        <Modal\r\n          show={this.state.setShow}\r\n          size=\"lg\"\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Course Information</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <table className=\"table table-striped table-bordered\">\r\n              <thead className=\"thead-dark\">\r\n                <tr>\r\n                  <th scope=\"col\">Activity</th>\r\n                  <th scope=\"col\">Time</th>\r\n                  <th scope=\"col\">Location</th>\r\n                  <th scope=\"col\">Instructor</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{this.courseInfo()}</tbody>\r\n            </table>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popup;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const GET_DISCIPLINE = gql`\r\n  {\r\n    queryDiscipline(first: 100) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_COURSE = gql`\r\n  {\r\n    queryCourse(first: 100) {\r\n      code\r\n      dates(first: 50) {\r\n        dayOfWeek\r\n        endTime\r\n        location\r\n        section\r\n        startTime\r\n      }\r\n      description\r\n      instructor\r\n      discipline_id\r\n      name\r\n      sections\r\n    }\r\n  }\r\n`;\r\n","import React, { Component, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport CoursePopup from \"./course-popup.component\";\nimport { GET_DISCIPLINE, GET_COURSE } from \"../query\";\nimport { Query } from \"react-apollo\";\n\nconst Course = props => (\n  <tr>\n    <th scope=\"row\">{props.course.name}</th>\n    <td>{props.course.code}</td>\n    <td>{props.course.description}</td>\n    <td>\n      <CoursePopup course={props.course}></CoursePopup>\n    </td>\n  </tr>\n);\n\nexport default class CoursesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteCourse = this.deleteCourse.bind(this);\n    this.createDisciplineList = this.createDisciplineList.bind(this);\n    this.state = {\n      courses: [],\n      disciplines: [],\n      selectedDisciplines: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/courses/\")\n      .then(response => {\n        this.setState({ courses: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    axios\n      .get(\"http://localhost:5000/disciplines/\")\n      .then(response => {\n        this.setState({ disciplines: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  deleteCourse(id) {\n    axios.delete(\"http://localhost:5000/courses/\" + id).then(response => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      courses: this.state.courses.filter(el => el._id !== id)\n    });\n  }\n\n  courseList(list) {\n    this.state.courses = list;\n    return this.state.courses.map(currentcourse => {\n      if (this.state.selectedDisciplines.length === 0) {\n        return (\n          <Course\n            course={currentcourse}\n            deleteCourse={this.deleteCourse}\n            key={currentcourse._id}\n          />\n        );\n      } else if (true) {\n        return (\n          <Course\n            course={currentcourse}\n            deleteCourse={this.deleteCourse}\n            key={currentcourse._id}\n          />\n        );\n      }\n    });\n  }\n\n  createDisciplineList(list) {\n    this.state.disciplines = [];\n\n    list.map(link => {\n      this.state.disciplines.push(link);\n    });\n    return (\n      <div>\n        <Select\n          options={this.disciplineList(this.state.disciplines)}\n          isSearchable=\"true\"\n          isMulti=\"true\"\n          value={this.disciplineList(this.getSelectedDisciplines)}\n          placeholder=\"Filter by Discipline\"\n          onChange={this.updateSelectedDisciplines}\n        />\n      </div>\n    );\n  }\n\n  // Gets disciplines and converts to {value, label}\n  disciplineList(disciplines) {\n    if (disciplines !== undefined) {\n      let disciplineList = [];\n      disciplines.map(discipline => {\n        disciplineList.push({\n          value: discipline.name,\n          label: discipline.name\n        });\n      });\n      return disciplineList;\n    }\n  }\n\n  // Update selected options state\n  updateSelectedDisciplines = selectedOptions => {\n    this.setState({ selectedOptions: selectedOptions }, () => {\n      if (selectedOptions) {\n        console.log(selectedOptions);\n        let newSelectedDisciplines = [];\n        selectedOptions.forEach(currentcourse => {\n          newSelectedDisciplines.push(currentcourse.value);\n        });\n        this.setState({\n          selectedDisciplines: newSelectedDisciplines\n        });\n      } else {\n        this.setState({\n          selectedDisciplines: []\n        });\n      }\n    });\n  };\n\n  render() {\n    const { selectedDisciplines } = this.state;\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-lg-3\">\n            <Query query={GET_DISCIPLINE}>\n              {({ loading, error, data }) => {\n                if (loading) return <div>Fetching</div>;\n                if (error) return <div>Error</div>;\n\n                const dataList = data.queryDiscipline;\n\n                return <div>{this.createDisciplineList(dataList)}</div>;\n              }}\n            </Query>\n          </div>\n\n          <div className=\"col-lg-9\">\n            <h3>Courses Offered</h3>\n            <table className=\"table table-striped table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Code</th>\n                  <th scope=\"col\">Description</th>\n                  <th scope=\"col\">Actions</th>\n                </tr>\n              </thead>\n              <Query query={GET_COURSE}>\n                {({ loading, error, data }) => {\n                  if (loading) return <div>Fetching</div>;\n                  if (error) return <div>Error</div>;\n\n                  const dataList = data.queryCourse;\n\n                  return <tbody>{this.courseList(dataList)}</tbody>;\n                }}\n              </Query>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class EditExercise extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      description: '',\n      duration: 0,\n      date: new Date(),\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/exercises/'+this.props.match.params.id)\n      .then(response => {\n        this.setState({\n          username: response.data.username,\n          description: response.data.description,\n          duration: response.data.duration,\n          date: new Date(response.data.date)\n        })   \n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n\n    axios.get('http://localhost:5000/users/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            users: response.data.map(user => user.username),\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    })\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    })\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    })\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date\n    }\n\n    console.log(exercise);\n\n    axios.post('http://localhost:5000/exercises/update/' + this.props.match.params.id, exercise)\n      .then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n\n  render() {\n    return (\n    <div>\n      <h3>Edit Exercise Log</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Username: </label>\n          <select ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}>\n              {\n                this.state.users.map(function(user) {\n                  return <option \n                    key={user}\n                    value={user}>{user}\n                    </option>;\n                })\n              }\n          </select>\n        </div>\n        <div className=\"form-group\"> \n          <label>Description: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Duration (in minutes): </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={this.onChangeDuration}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Date: </label>\n          <div>\n            <DatePicker\n              selected={this.state.date}\n              onChange={this.onChangeDate}\n            />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Edit Exercise Log\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class CreateExercise extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeCode = this.onChangeCode.bind(this);\n    this.onChangeDates = this.onChangeDates.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      code: \"\",\n      dates: {}\n    };\n  }\n\n  componentDidMount() {}\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeCode(e) {\n    this.setState({\n      code: e.target.value\n    });\n  }\n\n  onChangeDates(dates) {\n    this.setState({\n      dates: dates\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const course = {\n      name: this.state.name,\n      description: this.state.description,\n      code: this.state.code,\n      dates: this.state.dates\n    };\n\n    console.log(course);\n\n    axios\n      .post(\"http://localhost:5000/courses/add\", course)\n      .then(res => console.log(res.data));\n\n    window.location = \"/\";\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Add a New Course</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Name: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.name}\n              onChange={this.onChangeName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Description: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Code: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.code}\n              onChange={this.onChangeCode}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <div>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={this.state.dates}\n                onChange={this.onChangeDates}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create Course\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport \"./timetable.css\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst TableData = props => {\r\n  if (props.day !== null) {\r\n    let rowStart = props.startTime - 8 + 2 + (props.startTime - 8);\r\n    let rowEnd = props.endTime - 8 + 2 + (props.endTime - 8);\r\n    let column =\r\n      String(props.dayOfWeek + 1) + \" / \" + String(props.dayOfWeek + 2);\r\n\r\n    const tableDataMainStyle = {\r\n      backgroundColor: `rgb(${props.color})`,\r\n      fontSize: \"14px\",\r\n      gridRowStart: rowStart,\r\n      gridRowEnd: rowEnd,\r\n      gridColumn: column\r\n    };\r\n    return (\r\n      <Paper elevation={3} style={tableDataMainStyle} className=\"tableElement\">\r\n        {props.courseName}\r\n        <br />\r\n        {props.code}\r\n        <br />\r\n        Section: {props.section}\r\n      </Paper>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default TableData;\r\n","function getTimeSlot(num) {\r\n  return (num - 8) * 2;\r\n}\r\n\r\nasync function isValidTime(input, sections) {\r\n  return new Promise((resolve, reject) => {\r\n    let data = input;\r\n    console.log(\"TIMES\" + data + \":\" + sections);\r\n    let possible = true;\r\n    let times = Array(5)\r\n      .fill(0)\r\n      .map(x => Array(27).fill(0));\r\n    for (var i = 0; i < data.length; i++) {\r\n      for (var k = 0; k < data[i].dates.length; k++) {\r\n        let date = data[i].dates[k];\r\n        if (date.section === sections[i]) {\r\n          for (var j = date.startTime; j < date.endTime; j++) {\r\n            if (times[date.dayOfWeek - 1][getTimeSlot(j)] !== 1) {\r\n              times[date.dayOfWeek - 1][getTimeSlot(j)] = 1;\r\n            } else {\r\n              possible = false;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    resolve(possible);\r\n  });\r\n}\r\n\r\nasync function getCourses2(input, start, sections) {\r\n  var allTables = [];\r\n\r\n  async function getCourses(input, start, sections) {\r\n    //console.log(\"start: \" + input);\r\n\r\n    if (input.length === start) {\r\n      // TODO: verify sections is valid in another method\r\n      isValidTime(input, sections).then(possible => {\r\n        if (possible) allTables.push(sections);\r\n      });\r\n\r\n      //console.log(\"FINAL: \" + allTables);\r\n      //console.table(allTables);\r\n    } else {\r\n      for (var i = 1; i <= input[start].sections; i++) {\r\n        var newSection = [...sections];\r\n        newSection.push(i);\r\n        getCourses(input, start + 1, newSection);\r\n      }\r\n    }\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    getCourses(input, start, sections).then(result => {\r\n      resolve(allTables);\r\n    });\r\n  });\r\n}\r\n\r\nexport async function generateTimetable(courses) {\r\n  return getCourses2(courses, 0, [])\r\n    .then(table => {\r\n      return table;\r\n    })\r\n    .then(table => {\r\n      console.table(table);\r\n      return table;\r\n    });\r\n  /* \r\n    1. Get each course detail and store them\r\n    2. Loop through each possible arrangement of dates\r\n    3. Run a method that checks whether its possible\r\n    4. If possible, add to list, otherwise don't. Return list {[course, section]}\r\n    */\r\n}\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport TableData from \"./table.component\";\nimport \"./timetable.css\";\nimport { GET_DISCIPLINE, GET_COURSE } from \"../query\";\nimport { Query } from \"react-apollo\";\nimport { generateTimetable } from \"../generateTimetable\";\nimport { useAlert } from \"react-alert\";\n\nconst daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n\nconst Course = props => (\n  <tr>\n    <td>{props.course.name}</td>\n    <td>{props.course.code}</td>\n    {props.course.dates.map((item, key) => (\n      <div class=\"row\">\n        <td key={item._id}>\n          {daysOfWeek[item.dayOfWeek - 1]} {item.startTime} - {item.endTime}\n        </td>\n      </div>\n    ))}\n    <td>\n      {props.course.dates.map((item, key) => (\n        <div class=\"row\">\n          <td key={item._id}>{item.section}</td>\n        </div>\n      ))}\n    </td>\n  </tr>\n);\n\nexport default class Timetable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.generate = this.generate.bind(this); // Allows access of states in function\n    this.nextTime = this.nextTime.bind(this);\n    this.prevTime = this.prevTime.bind(this);\n\n    // courses - all course information in db\n    // selectedOptions - selected options array (value, label)\n    this.state = {\n      courses: [],\n      selectedOptions: [],\n      selectedCourses: [],\n      allTimes: [],\n      currentPage: 0,\n      totalPage: 0\n    };\n  }\n\n  componentDidMount() {}\n\n  // returns list of course information by what's in selectedOptions\n  courseList() {\n    return this.state.courses.map(currentcourse => {\n      let courseNames = [];\n      if (this.state.selectedOptions) {\n        this.state.selectedOptions.map(currentcourse => {\n          courseNames.push(currentcourse.value);\n        });\n        if (courseNames.includes(currentcourse.name)) {\n          return (\n            <Course\n              course={currentcourse}\n              deleteCourse={this.deleteCourse}\n              key={currentcourse._id}\n            />\n          );\n        }\n      }\n    });\n  }\n\n  // Gets courses and converts to {value, label}\n  courseNameList() {\n    let courseNames = [];\n    this.state.courses.map(currentcourse => {\n      courseNames.push({\n        value: currentcourse.name,\n        label: currentcourse.name\n      });\n    });\n    return courseNames;\n  }\n\n  getSelectedCourses() {\n    let selectedCourses = [];\n    this.state.courses.map(currentcourse => {\n      let courseNames = [];\n      if (this.state.selectedOptions) {\n        this.state.selectedOptions.map(coursename => {\n          courseNames.push(coursename.value);\n        });\n        if (courseNames.includes(currentcourse.name)) {\n          selectedCourses.push([currentcourse, -1]); // SETTING SECTION TO 1, later on read this value\n        }\n      }\n    });\n\n    return selectedCourses;\n  }\n\n  // Update selected options state\n  updateSelect = selectedOptions => {\n    this.setState({ selectedOptions: selectedOptions }, () => {\n      this.setState({ selectedCourses: this.getSelectedCourses() });\n    });\n  };\n\n  showDayOfWeek() {\n    let columns = [];\n    columns.push(<div>Time</div>);\n    daysOfWeek.map(current => {\n      columns.push(<div>{current}</div>);\n    });\n    return <React.Fragment>{columns}</React.Fragment>;\n  }\n\n  showTime() {\n    let rows = [];\n    // Render 8 AM to 9 PM\n    for (var i = 8; i <= 20; i++) {\n      let time = i;\n      if (time > 12) time -= 12;\n      rows.push(<div>{time}:00</div>);\n      rows.push(<div>{time}:30</div>);\n    }\n    rows.push(<div>9:00</div>);\n\n    return <React.Fragment>{rows}</React.Fragment>;\n  }\n\n  renderDates(course) {\n    let tableData = [];\n    console.log(course[0]);\n    course[0].dates.map(date => {\n      if (date.section === course[1])\n        tableData.push(\n          <TableData\n            key={course[0].code}\n            color={[180, 180, 255]}\n            startTime={date.startTime}\n            endTime={date.endTime}\n            dayOfWeek={date.dayOfWeek}\n            section={date.section}\n            code={course[0].code}\n            courseName={course[0].name}\n            description={course[0].description}\n          />\n        );\n    });\n    return tableData;\n  }\n\n  async getCourseNames() {\n    var courseNames = [];\n    return new Promise((resolve, reject) => {\n      this.state.selectedCourses.map(course => {\n        courseNames.push(course[0].name);\n      });\n      Promise.all(courseNames).then(courseList => {\n        resolve(courseList);\n      });\n    });\n  }\n\n  updateTimes() {\n    var index = 0;\n    const promiseArray = this.state.selectedCourses.map(item => {\n      return new Promise((resolve, reject) => {\n        let arr = [];\n        arr.push(item[0]);\n        let val3 = this.state.allTimes[this.state.currentPage - 1][index];\n        arr.push(val3);\n        index++;\n        return resolve(arr);\n      });\n    });\n\n    Promise.all(promiseArray).then(selected => {\n      console.log(selected);\n      this.setState({\n        selectedCourses: selected\n      });\n    });\n  }\n\n  generate() {\n    let courseIds = this.state.selectedCourses[0];\n    if (this.state.selectedCourses.length > 0) {\n      courseIds.pop();\n      console.log(courseIds);\n      console.log(\"generated\");\n      generateTimetable(courseIds).then(response => {\n        console.log(response);\n\n        this.setState(\n          {\n            allTimes: response,\n            currentPage: 1,\n            totalPage: response.length\n          },\n          () => {\n            if (this.state.totalPage === 0) {\n              this.setState({\n                currentPage: 0\n              });\n            } else {\n              this.updateTimes();\n            }\n          }\n        );\n      });\n    }\n  }\n\n  nextTime() {\n    if (this.state.currentPage < this.state.totalPage) {\n      this.setState(\n        {\n          currentPage: this.state.currentPage + 1\n        },\n        () => {\n          this.updateTimes();\n        }\n      );\n    }\n  }\n\n  prevTime() {\n    if (this.state.currentPage > 1) {\n      this.setState(\n        {\n          currentPage: this.state.currentPage - 1\n        },\n        () => {\n          this.updateTimes();\n        }\n      );\n    }\n  }\n\n  createSelectedCourses(list, selectedOptions) {\n    this.state.courses = [];\n    list.map(item => {\n      this.state.courses.push(item);\n    });\n\n    return (\n      <div>\n        <Select\n          options={this.courseNameList()}\n          isSearchable=\"true\"\n          isMulti=\"true\"\n          value={selectedOptions}\n          placeholder=\"Choose courses\"\n          onChange={this.updateSelect}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { selectedOptions } = this.state;\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-lg-5\">\n            <p>\n              Select at least 1 course and press Generate Timetables to see the\n              magic!\n            </p>\n            <h3>Selected Courses</h3>\n            <Query query={GET_COURSE}>\n              {({ loading, error, data }) => {\n                if (loading) return <div>Fetching</div>;\n                if (error) return <div>Error</div>;\n\n                const dataList = data.queryCourse;\n\n                return (\n                  <React.Fragment>\n                    {this.createSelectedCourses(dataList, selectedOptions)}\n                  </React.Fragment>\n                );\n              }}\n            </Query>\n\n            <table className=\"table table-striped table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th>Name</th>\n                  <th>Code</th>\n                  <th>Dates</th>\n                  <th>Section</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>{this.courseList()}</tbody>\n            </table>\n          </div>\n          <div className=\"col-lg-7\">\n            <button\n              className=\"btn btn-primary generate\"\n              onClick={this.generate}\n            >\n              Generate Timetables\n            </button>\n            <button\n              className=\"btn btn-secondary generate\"\n              onClick={this.prevTime}\n            >\n              <b>&lt;</b>\n            </button>\n            <span className=\"generate\">\n              <b>\n                {this.state.currentPage}/{this.state.totalPage}\n              </b>\n            </span>\n            <button\n              className=\"btn btn-secondary generate\"\n              onClick={this.nextTime}\n            >\n              <b>&gt;</b>\n            </button>\n            <p>Scroll through generated timetables!</p>\n            <div className=\"timetable\">\n              <section className=\"dayOfWeekWrapper\">\n                {this.showDayOfWeek()}\n              </section>\n              <section className=\"timeWrapper\">{this.showTime()}</section>\n              {this.state.selectedCourses.map(course => {\n                return this.renderDates(course);\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar.component\";\nimport Footer from \"./components/footer.component\";\nimport CoursesList from \"./components/courses-list.component\";\nimport EditCourse from \"./components/edit-course.component\";\nimport CreateCourse from \"./components/create-course.component\";\nimport Timetable from \"./components/timetable.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <br />\n      <div className=\"container\">\n        <Route path=\"/\" exact component={CoursesList} />\n        <Route path=\"/edit/:id\" component={EditCourse} />\n        {/*<Route path=\"/create\" component={CreateCourse} /> */}\n        <Route path=\"/timetable\" component={Timetable} />\n      </div>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const selectedCoursesSlice = createSlice({\r\n  name: \"selectedCourses\",\r\n  initialState: {\r\n    value: []\r\n  },\r\n  reducers: {\r\n    setCourses: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.selectedCourses = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setCourses } = selectedCoursesSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectSelectedCourses = state => state.selectedCourses;\r\n\r\nexport default selectedCoursesSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport selectedCoursesReducer from \"../actions/selectedCoursesSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    selectedCourses: selectedCoursesReducer\r\n  }\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"https://bent-dog.us-west-2.aws.cloud.dgraph.io/graphql\"\n});\n\nconst client = new ApolloClient({\n  cache,\n  link\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <AlertProvider template={AlertTemplate}>\n      <App />\n    </AlertProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}